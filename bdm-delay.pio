.program bdm_delay
.side_set 1 opt

.wrap_target
    pull                                  ; Copy dummy data from tx fifo to OSR. Stall if tx fifo is empty
    set pindirs, 1      side 1            ; Set pin high
    nop         [7]                       ; Wait 16 cycles
    nop         [7]
    in null, 32
.wrap

% c-sdk {

// Helper function (for use in C program) to initialize this PIO program
void bdm_delay_program_init(PIO pio, uint sm, uint offset, uint data_pin, float div) {

    // Sets up state machine and wrap target. This function is automatically
    // generated in bdm.pio.h.
    pio_sm_config c = bdm_delay_program_get_default_config(offset);

    // Allow PIO to control GPIO pin (as output)
    pio_gpio_init(pio, data_pin);

    // Connect pin to SIDE-SET pin (control with 'side-set' instruction)
    sm_config_set_sideset_pins(&c, data_pin);

    // Connect pin to SET pin (control with 'set' instruction)
    sm_config_set_set_pins(&c, data_pin, 1);

    // Set the initial pin direction as output (in PIO) 
    pio_sm_set_consecutive_pindirs(pio, sm, data_pin, 1, true);
    
    // Set the clock divider for the state machine
    sm_config_set_clkdiv(&c, div);

    // Set shift push count threshold(only for dummy read). Autopush is enabled when 32 bit are shifted in.
    sm_config_set_in_shift(&c, true, true, 32);

    // Load configuration and jump to start of the program
    pio_sm_init(pio, sm, offset, &c);
}

%}